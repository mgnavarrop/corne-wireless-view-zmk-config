/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define HRML(k1, k2, k3, k4) &ht k1 k1  &ht k2 k2  &ht k3 k3  &ht k4 k4
#define HRMR(k1, k2, k3, k4) &ht k1 k1  &ht k2 k2  &ht k3 k3  &ht k4 k4

/ {


/*
  	behaviors {
        	td0: tap_dance_0 {
            		compatible = "zmk,behavior-tap-dance";
            		label = "TAP_DANCE_0";
            		#binding-cells = <0>;
            		tapping-term-ms = <200>;
            		bindings = <&kp LGUI>, <&kp LGUI>;
        	};
    	};
*/
    	behaviors {
        	ht: hold_tap {
            		compatible = "zmk,behavior-hold-tap";
            		label = "HOLD_TAP";
            		#binding-cells = <2>;
            		flavor = "tap-preferred";
            		tapping-term-ms = <220>;
            		quick-tap-ms = <150>;
			global-quick-tap;
            		bindings = <&kp>, <&kp>;
        	};
    	};

    	combos {
        	compatible = "zmk,combos";
	        combo_esc {
            		timeout-ms = <50>;
            		key-positions = <1 2>;
            		bindings = <&kp ESC>;
        	};
    	};

    	macros {
        	macro_n: macro_n {
	            label = "MACRO_N";
        	    compatible = "zmk,behavior-macro";
	            #binding-cells = <0>;
        	    bindings
	                = <&kp RALT &kp N>
        	        , <&kp N>
	                ;
        	};
	};

        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        bindings = <
//  ----------------------------------------------------------     --------------------------------------------------------------------
// |   TAB     |  Q     |  W     |  E      |  R     |  T      |   |  Y     |  U      |  I         |  O        |  P          | \        |                        
     &kp TAB      &kp Q   &kp W     &kp E     &kp R    &kp T         &kp Y    &kp U     &kp I        &kp O       &kp P       &kp BSLH
// |----------------------------------------------------------     --------------------------------------------------------------------|
// | SHIFT     |  A     |  S     |  D      |  F     |  G      |   |  H     |  J      |  K         |  L        |  UP         | ALT      |
     &kp LSHFT   HRML(A,   S,       D,        F)       &kp G         &kp H   HRMR(J,    K,           L,          UP)          &kp RALT
// |----------------------------------------------------------     --------------------------------------------------------------------|   
// | CTRL      |  Z     |  X     |  C      |  V     |  B      |   |  N     |  M      |  ,         |  LEFT     |  DOWN       | RIGHT    |
     &kp LCTRL   &kp Z    &kp X    &kp C     &kp V    &kp B         &kp N    &kp M     &kp COMMA     &kp LEFT    &kp DOWN     &kp RIGHT
// |----------------------------------------------------------     --------------------------------------------------------------------|     
//                               | GUI     | LWR    | SPC     |   | ENT    | RSE     | BSPC      |
                                   &kp LGUI  &mo 1    &kp SPACE     &kp RET  &mo 2     &kp BSPC
                        >;
                };

                left_layer {
                        bindings = <
//  ----------------------------------------------------------------------     -------------------------------------------------------------------------  
// |  `          |  !        |  @       |  #       |  $       |  %        |   |  ^        |  &       |  *              |  (       |  )       | "|"      |                        
      &kp GRAVE     &kp EXCL    &kp AT    &kp HASH   &kp DLLR   &kp PRCNT       &kp CARET   &kp AMPS   &kp KP_MULTIPLY   &kp LPAR   &kp RPAR   &kp PIPE
//  ----------------------------------------------------------------------     -------------------------------------------------------------------------      
// |             |           |          |          |          |           |   |  -        |  +       |  =              |  [       |  ]       |  ;       |
     &trans         &trans      &trans    &trans     &trans     &trans          &kp MINUS   &kp PLUS  &kp EQUAL          &kp LBKT   &kp RBKT   &kp SEMI
//  ----------------------------------------------------------------------     -------------------------------------------------------------------------     
// |             |           |          |          |          |           |   |  _        |  ~       |  ,              |  .       |  /       |  '       |
     &trans         &trans      &trans    &trans     &trans     &trans          &kp UNDER   &kp TILDE   &kp COMMA          &kp DOT   &kp FSLH   &kp SQT
//  ----------------------------------------------------------------------     -------------------------------------------------------------------------        
//                                      | DEL      |          | SPC       |   | ENT       |          | BSPC            |   
                    	                  &kp DEL    &trans     &kp SPACE       &kp RET     &trans     &kp BSPC
                        >;
                };

                right_layer {
                        bindings = <
//  ----------------------------------------------------------------------     -----------------------------------------------------------------  
// |  `         |  1        |  2        |  3      |  4        |  5        |   | 6        |  7       |  8       |  9        |  0      | ALT      |                        
      &kp GRAVE    &kp N1      &kp N2      &kp N3    &kp N4      &kp N5         &kp N6      &kp N7    &kp N8     &kp N9     &kp N0    &kp RALT
//  ----------------------------------------------------------------------     -----------------------------------------------------------------  
// |            |           |           |         |           |           |   | LFT      | DWN      |  UP      | RGT       |         | F12      |   
     &trans        &trans      &trans      &trans    &trans     &trans          &kp LEFT   &kp DOWN    &kp UP    &kp RIGHT   &trans    &kp F12
//  ----------------------------------------------------------------------     -----------------------------------------------------------------     
// |            |  F1       |  F2       |  F3     |  F4       |  F5       |   | F6       | F7       | F8       | F9        | F10     | F11      |   
     &trans        &kp F1      &kp F2      &kp F3    &kp F4      &kp F5         &kp F6     &kp F7     &kp F8     &kp F9      &kp F10   &kp F11
//  ----------------------------------------------------------------------     -----------------------------------------------------------------          
//                                      | GUI     |           |  SPC      |   | ENT      |          | BSPC     |
                                       	  &kp LGUI   &trans      &kp SPACE      &kp RET    &trans     &kp BSPC
                        >;
                };
        };
};
