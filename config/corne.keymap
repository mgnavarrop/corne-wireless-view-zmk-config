/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define HRML(k1, k2, k3, k4) &ht k1 k1  &ht k2 k2  &ht k3 k3  &ht k4 k4
#define HRMR(k1, k2, k3, k4) &ht k1 k1  &ht k2 k2  &ht k3 k3  &ht k4 k4

/ {


/*
  	behaviors {
        	td0: tap_dance_0 {
            		compatible = "zmk,behavior-tap-dance";
            		label = "TAP_DANCE_0";
            		#binding-cells = <0>;
            		tapping-term-ms = <200>;
            		bindings = <&kp LGUI>, <&kp LGUI>;
        	};
    	};
*/
    	behaviors {
        	ht: hold_tap {
            		compatible = "zmk,behavior-hold-tap";
            		label = "HOLD_TAP";
            		#binding-cells = <2>;
            		flavor = "tap-preferred";
            		tapping-term-ms = <220>;
            		quick-tap-ms = <150>;
			global-quick-tap;
            		bindings = <&kp>, <&kp>;
        };
    };


    	combos {
        	compatible = "zmk,combos";
	        combo_esc {
            		timeout-ms = <50>;
            		key-positions = <1 2>;
            		bindings = <&kp ESC>;
        	};
    	};

        keymap {
                compatible = "zmk,keymap";

/* 
 *                  default_layer {
 *                         bindings = <
 * //  ----------------------------------------------------------     --------------------------------------------------------------------
 * // |   TAB     |  Q     |  W     |  E      |  R     |  T      |   |  Y     |  U      |  I         |  O        |  P         | ALT       |                        
 *      &kp TAB      &kp Q   &kp W     &kp E     &kp R    &kp T         &kp Y    &kp U     &kp I        &kp O       &kp P       &kp RALT
 * // |----------------------------------------------------------     --------------------------------------------------------------------|
 * // | SHIFT     |  A     |  S     |  D      |  F     |  G      |   |  H     |  J      |  K         |  L        |  ;         |  '        |
 *      &kp LSHFT    &kp A    &kp S    &kp D     &kp F    &kp G         &kp H    &kp J     &kp K        &kp L       &kp SEMI    &kp SQT
 * // |----------------------------------------------------------     --------------------------------------------------------------------|   
 * // | CTRL      |  Z     |  X     |  C      |  V     |  B      |   |  N     |  M      |  ,         |  .        |  /         | ESC.      |
 *      &kp LCTRL   &kp Z    &kp X    &kp C     &kp V    &kp B         &kp N    &kp M     &kp COMMA    &kp DOT     &kp FSLH    &kp ESC
 * // |----------------------------------------------------------     --------------------------------------------------------------------|     
 * //                               | GUI     | LWR    | SPC     |   | ENT    | RSE     | BSPC      |
 *                                    &kp LGUI  &mo 1    &kp SPACE     &kp RET  &mo 2     &kp BSPC
 *                         >;
 *                 };
 */

                default_layer {
                        bindings = <
//  ----------------------------------------------------------     --------------------------------------------------------------------
// |   ESC     |  Q     |  W     |  E      |  R     |  T      |   |  Y     |  U      |  I         |  O        |  P         | \         |                        
     &kp ESC      &kp Q   &kp W     &kp E     &kp R    &kp T         &kp Y    &kp U     &kp I        &kp O       &kp P       &kp BSLH
// |----------------------------------------------------------     --------------------------------------------------------------------|
// | SHIFT     |  A     |  S     |  D      |  F     |  G      |   |  H     |  J      |  K         |  L        |  UP         | TAB      |
     &kp LSHFT   HRML(A,   S,       D,        F)       &kp G         &kp H   HRMR(J,    K,           L,          UP)          &kp TAB
// |----------------------------------------------------------     --------------------------------------------------------------------|   
// | CTRL      |  Z     |  X     |  C      |  V     |  B      |   |  N     |  M      |  ;         |  LEFT     |  DOWN       | RIGHT    |
     &kp LCTRL   &kp Z    &kp X    &kp C     &kp V    &kp B         &kp N    &kp M     &kp SEMI    &kp LEFT     &kp DOWN    &kp RIGHT
// |----------------------------------------------------------     --------------------------------------------------------------------|     
//                               | GUI     | LWR    | SPC     |   | ENT    | RSE     | BSPC      |
                                   &kp LGUI  &mo 1    &kp SPACE     &kp RET  &mo 2     &kp BSPC
                        >;
                };


/*
 *                  raise_layer {
 *                         bindings = <
 * //  ----------------------------------------------------------------------     -------------------------------------------------------------------------  
 * // |  `          |  !        |  @       |  #       |  $       |  %        |   |  ^        |  &       |  *              |  (       |  )       | ALT      |                        
 *      &kp GRAVE     &kp EXCL    &kp AT    &kp HASH   &kp DLLR   &kp PRCNT       &kp CARET   &kp AMPS   &kp KP_MULTIPLY   &kp LPAR   &kp RPAR   &kp RALT
 * //  ----------------------------------------------------------------------     -------------------------------------------------------------------------      
 * // | SHFT        |           |          |          |          |           |   |  -        |  =       |  [              |  ]       |  \       |  `       |
 *      &kp LSHFT      &trans      &trans    &trans     &trans     &trans          &kp MINUS   &kp EQUAL  &kp LBKT          &kp RBKT   &kp BSLH   &kp GRAVE
 * //  ----------------------------------------------------------------------     -------------------------------------------------------------------------     
 * // | CTRL        |           |          |          |          |           |   |  _        |  +       |  {              |  }       | "|"      |  ~       |
 *      &kp LCTRL      &trans      &trans    &trans     &trans     &trans          &kp UNDER   &kp PLUS   &kp LBRC          &kp RBRC   &kp PIPE   &kp TILDE
 * //  ----------------------------------------------------------------------     -------------------------------------------------------------------------        
 * //                                      | LCTRL    |          | SPC       |   | ENT       |          | BSPC            |   
 *                     	                     &kp LCTRL  &trans     &kp SPACE       &kp RET     &trans     &kp BSPC
 *                         >;
 *                };,
 */


                left_layer {
                        bindings = <
//  ----------------------------------------------------------------------     -------------------------------------------------------------------------  
// |  `          |  !        |  @       |  #       |  $       |  %        |   |  ^        |  &       |  *              |  (       |  )       | ALT     |                        
      &kp GRAVE     &kp EXCL    &kp AT    &kp HASH   &kp DLLR   &kp PRCNT       &kp CARET   &kp AMPS   &kp KP_MULTIPLY   &kp LPAR   &kp RPAR   &kp RALT
//  ----------------------------------------------------------------------     -------------------------------------------------------------------------      
// | SHFT        |           |          |          |          |           |   |  -        |  +       |  =              |  [       |  ]       |         |
     &kp LSHFT      &trans      &trans    &trans     &trans     &trans          &kp MINUS   &kp PLUS  &kp EQUAL          &kp LBKT   &kp RBKT   &trans
//  ----------------------------------------------------------------------     -------------------------------------------------------------------------     
// | CTRL        |           |          |          |          |           |   |  _        |  ~       |  ,              |  .       |  /       |  ;       |
     &kp LCTRL      &trans      &trans    &trans     &trans     &trans          &kp UNDER   &kp TILDE   &kp COMMA          &kp DOT   &kp FSLH   &kp SEMI
//  ----------------------------------------------------------------------     -------------------------------------------------------------------------        
//                                      | GUI      |          | SPC       |   | ENT       |          | BSPC            |   
                    	                  &kp LGUI  &trans     &kp SPACE       &kp RET     &trans     &kp BSPC
                        >;
                };


/* 
 *                  lower_layer {
 *                         bindings = <
 * //  ----------------------------------------------------------------------     -----------------------------------------------------------------  
 * // |  TAB       |  1        |  2        |  3      |  4        |  5        |   | 6        |  7       |  8       |  9        |  0      | ALT      |                        
 *       &kp TAB      &kp N1      &kp N2      &kp N3    &kp N4      &kp N5         &kp N6      &kp N7    &kp N8     &kp N9     &kp N0   &kp RALT
 * //  ----------------------------------------------------------------------     -----------------------------------------------------------------  
 * // | SHFT       |           |           |         |           |           |   | LFT      | DWN      |  UP      | RGT       |         | F12      |   
 *      &kp LSHFT     &trans      &trans      &trans    &trans     &trans          &kp LEFT   &kp DOWN    &kp UP    &kp RIGHT   &trans    &kp F12
 * //  ----------------------------------------------------------------------     -----------------------------------------------------------------     
 * // | CTRL       |  F1       |  F2       |  F3     |  F4       |  F5       |   | F6       | F7       | F8       | F9        | F10     | F11      |   
 *      &kp LCTRL     &kp F1      &kp F2      &kp F3    &kp F4      &kp F5         &kp F6     &kp F7     &kp F8     &kp F9      &kp F10   &kp F11
 * //  ----------------------------------------------------------------------     -----------------------------------------------------------------          
 * //                                      | GUI     |           |  SPC      |   | ENT      |          | BSPC     |
 *                                     	     &kp LGUI   &trans      &kp SPACE      &kp RET    &trans     &kp BSPC
 *                       >;
 *               };
 */

                right_layer {
                        bindings = <
//  ----------------------------------------------------------------------     -----------------------------------------------------------------  
// |  `         |  1        |  2        |  3      |  4        |  5        |   | 6        |  7       |  8       |  9        |  0      | ALT      |                        
      &kp GRAVE    &kp N1      &kp N2      &kp N3    &kp N4      &kp N5         &kp N6      &kp N7    &kp N8     &kp N9     &kp N0    &kp RALT
//  ----------------------------------------------------------------------     -----------------------------------------------------------------  
// | SHFT       |           |           |         |           |           |   | LFT      | DWN      |  UP      | RGT       |         | F12      |   
     &kp LSHFT     &trans      &trans      &trans    &trans     &trans          &kp LEFT   &kp DOWN    &kp UP    &kp RIGHT   &trans    &kp F12
//  ----------------------------------------------------------------------     -----------------------------------------------------------------     
// | CTRL       |  F1       |  F2       |  F3     |  F4       |  F5       |   | F6       | F7       | F8       | F9        | F10     | F11      |   
     &kp LCTRL     &kp F1      &kp F2      &kp F3    &kp F4      &kp F5         &kp F6     &kp F7     &kp F8     &kp F9      &kp F10   &kp F11
//  ----------------------------------------------------------------------     -----------------------------------------------------------------          
//                                      | GUI     |           |  SPC      |   | ENT      |          | BSPC     |
                                       	  &kp LGUI   &trans      &kp SPACE      &kp RET    &trans     &kp BSPC
                        >;
                };
        };
};
